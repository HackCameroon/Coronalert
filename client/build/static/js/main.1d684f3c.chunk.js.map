{"version":3,"sources":["logo.svg","components/AlertInterface/NumberInput.js","components/AlertInterface/LocationModal/LocationInput.js","api/request.js","api/data.js","components/AlertInterface/LocationModal/LocationStats.js","components/AlertInterface/LocationModal/LocationModal.js","components/AlertInterface/SettingsBar.js","api/user.js","components/AlertInterface/AlertForm.js","components/AlertInterface/AlertInterface.js","components/HomeView.js","components/SourcesView.js","components/AboutView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NumberInput","props","state","value","showErrorText","showLocationInput","_huge","handleChange","bind","handleKeyDown","handleKeyUp","handleSubmit","beResponsive","x","window","matchMedia","this","addListener","console","log","document","getElementsByClassName","setState","huge","matches","code","event","key","deleteOnUp","isPossiblePhoneNumber","displayForm","retrieveNumber","className","countries","onChange","limitMaxLength","addInternationalOption","id","onKeyPress","Button","onClick","Component","LocationInput","onSuggestSelect","default","prevProps","suggest","onSelect","userInput","onFocus","onBlur","onSuggestNoResults","location","google","maps","LatLng","country","radius","placeholder","initialValue","React","BASE_URL","process","Request","endpoint","parameters","options","method","url","undefined","axios","then","response","catch","error","callback","Data","info","data","LocationStats","stats","errorMsg","loading","getStats","get_data","source","last_updated","lastUpdated","getFIPS","fips","msg","address","county","comp","types","includes","long_name","short_name","Loader","active","inline","addrComponents","gmaps","address_components","parseAddress","countyName","stateName","statsList","Object","entries","entry","push","LocationModal","selection","defaultVal","handleSelection","update","description","retrieveLocInfo","marks","0","1","2","3","4","marksMap","invMarksMap","7","SettingsBar","showCustomFreq","freqValue","reportChangesValue","retrieveSettings","handleSliderChange","handleCustomChange","handleRadioChange","target","Segment","Header","as","min","max","defaultValue","step","Input","label","content","labelPosition","transparent","Radio","toggle","checked","User","number","AlertForm","locModals","locData","settings","handleAdd","handleRemove","getData","resp","success","places","map","val","i","length","concat","pop","allData","values","phone_number","submit","completeSubmit","type","Group","basic","icon","style","display","flexDirection","alignItems","color","AlertInterface","submitted","HomeView","Subheader","fontSize","SourcesView","Card","fluid","href","link","Image","src","wrapped","ui","Content","Meta","Description","extra","Icon","name","AboutView","App","handleItemClick","e","activeItem","activeView","Menu","size","secondary","position","Item","marginLeft","data-tip","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1d684f3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component, useState } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport \"./NumberInput.css\"\nimport PhoneNumberInput, { isPossiblePhoneNumber } from 'react-phone-number-input'\nimport 'react-phone-number-input/style.css'\n\nexport class NumberInput extends Component {\n    constructor(props) {\n    super(props);\n\n    this.state = {\n      value: \"\",\n      showErrorText: false,\n      showLocationInput: false,\n      _huge: true\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.beResponsive = this.beResponsive.bind(this);\n  }\n  \n  componentDidMount() {\n    var x = window.matchMedia(\"(max-width: 500px)\")\n    this.beResponsive(x)\n    x.addListener(this.beResponsive)\n  }\n\n  beResponsive(x){\n    console.log(x)\n    var element = document.getElementsByClassName(\"PhoneInput\")[0]\n    this.setState({\n      huge:!x.matches\n    })\n  }\n\n  keyCodeIsNumber(code) {\n    return (code >= 48 && code <= 57) || (code >= 96 && code <= 105);\n  }\n\n  handleChange(value) {\n    this.setState({ \n      value: value\n    })\n  }\n\n  handleKeyDown(event) {\n    if (event.key === 'Enter') { // enter\n      this.handleSubmit()\n    }\n    console.log(event.key)\n  }\n\n  handleKeyUp(event) {\n    if (this.state.deleteOnUp) {\n      this.handleChange(event);\n    }\n  }\n\n  handleSubmit(event){\n    if (!isPossiblePhoneNumber(this.state.value)){\n      this.setState({showErrorText: true})\n    }\n    else{\n      this.props.displayForm(true)\n      this.props.retrieveNumber(this.state.value)\n      this.setState({showErrorText: false})\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"NumberInput\">\n        <div className=\"input-container\">\n          <PhoneNumberInput \n            countries={[\"US\"]}\n            value={this.state.value}\n            onChange={this.handleChange} \n            limitMaxLength={true}\n            addInternationalOption={false}\n            className={this.state.huge ? \"ui input huge\" : \"ui input medium\"}\n            id=\"number-input\"\n            onKeyPress={this.handleKeyDown}\n          />\n          <Button className=\"submit-btn\" onClick={this.handleSubmit}>Go</Button>\n        </div>\n        {this.state.showErrorText ? <p className=\"error\"> Not a valid phone number!</p> : null}\n      </div>\n    );\n  }\n}\n\nexport default NumberInput;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Geosuggest from 'react-geosuggest';\nimport \"./LocationInput.css\"\nimport { Segment } from 'semantic-ui-react'\n\n// add current location: https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API\n\nclass LocationInput extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.onSuggestSelect = this.onSuggestSelect.bind(this)\n    this.state = {default: null}\n\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.default!== this.props.default && this.props.default != null){\n      this.setState({default: this.props.default})\n    }\n  }\n\n  /**\n   * When the input receives focus\n   */\n  onFocus(): void {\n    console.log('onFocus');\n  }\n\n  /**\n   * When the input loses focus\n   */\n  onBlur(value?: string): void {\n    console.log('onBlur', value);\n  }\n\n  /**\n   * When the input got changed\n   */\n  onChange(value: string) {\n    console.log('input changes to :' + value);\n  }\n\n  /**\n   * When a suggest got selected\n   */\n  onSuggestSelect(suggest: any) {\n    this.props.onSelect(suggest)\n  }\n\n  /**\n   * When there are no suggest results\n   */\n  onSuggestNoResults(userInput: string) {\n    console.log('onSuggestNoResults for :' + userInput);\n  }\n\n  /**\n   * Render the example app\n   * @return {Function} React render function\n   */\n  render(){\n    const fixtures = [  // TODO: Get actual location for these counties\n      {label: 'New York City', location: {lat: 40.7033127, lng: -73.979681}},\n      {label: 'Santa Clara', location: {lat: -22.066452, lng: -42.9232368}},\n      {label: 'King County, Washington', location: {lat: 35.673343, lng: 139.710388}}\n    ];\n    console.log(this.state.default)\n    return (\n\n      <div className=\"LocationInput\">\n        <Geosuggest\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onChange={this.onChange}\n          onSuggestSelect={this.onSuggestSelect}\n          onSuggestNoResults={this.onSuggestNoResults}\n          location={new window.google.maps.LatLng(53.558572, 9.9278215)}\n          country=\"us\"\n          radius=\"20\"\n          placeholder={\"Enter zipcode or address\"}\n          initialValue={this.state.default}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LocationInput;","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BACKEND_URL;\n\nclass Request {\n  constructor(endpoint, parameters = {}) {\n    // Default request options for axios\n    let options = {\n      method: \"GET\",\n      url: BASE_URL + endpoint,\n    };\n\n    // Add request data\n    options[\"data\"] = parameters[\"data\"];\n\n    // Only pass method if undefined, since it is assumed to be GET\n    if (parameters[\"method\"] !== undefined) {\n      options[\"method\"] = parameters[\"method\"];\n    }\n\n    // Pass request body and URL parameters\n    options[\"params\"] = parameters[\"params\"];\n\n    // Perform the request\n    axios(options).then(response => {\n      if (typeof this.then !== \"undefined\") {\n        this.then(response);\n      }\n    }).catch(error => {\n      if (typeof this.catch !== \"undefined\") {\n        this.catch(error);\n      }\n    });\n  }\n\n  catch(callback) {\n    this.catch = callback;\n    return this;\n  }\n\n  then(callback) {\n    this.then = callback;\n    return this;\n  }\n}\n\nexport default Request;\n","import Request from './request'\n\nclass Data {\n  static get_data(info) {\n    return new Request(\"/datapull/get_data\", {\n      data: info,\n      method: \"POST\"\n    })\n  }\n\n  static test_get_data(){\n    return new Request(\"/datapull/test_get_data\")\n  }\n}\n\nexport default Data;","import React, { Component } from 'react';\nimport { Header, Loader } from 'semantic-ui-react';\nimport Data from '../../../api/data';\nimport axios from 'axios';\nimport \"./LocationStats.css\"\n\n//https://github.com/zcreativelabs/react-simple-maps/issues/22\n\n// https://www.react-simple-maps.io/examples/usa-counties-choropleth-quantile/\n\nconst testStats = {Confirmed: \"110\", Deaths: \"4\"}\nconst source = \"JHU CSSE\"\nconst time = \"10:02 AM 3/29/20\"\n\nclass LocationStats extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      stats: null,\n      errorMsg: null,\n      loading: false\n    }\n\n    this.getStats = this.getStats.bind(this)\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.data !== this.props.data && this.props.data != null){\n      this.getStats()\n    }\n  }\n\n  getStats(){\n    Data.get_data(this.props.data)\n    .then(response => {\n      console.log(response)\n      const {data, source, last_updated} = response.data\n      this.setState({\n        stats: data,\n        source: source,\n        lastUpdated: last_updated,\n        errorMsg: null,\n        loading: false\n      })\n      this.props.getFIPS(response.data.fips)\n    })\n    .catch(error => {\n      console.log(error)\n      if(error.data != null){\n        this.setState({errorMsg: error.data.msg})\n      }\n      this.setState({\n        stats: null,\n        loading: false\n      })\n      \n    })\n  }\n  \n  parseAddress(address){\n    var county = \"\", state = \"\"\n    for (var comp of address){\n      if(comp.types.includes(\"administrative_area_level_2\")){\n        county = comp.long_name\n      }\n      if(comp.types.includes(\"administrative_area_level_1\")){\n        state = comp.short_name\n      }\n    }\n    return [county, state]\n  }\n\n  render() {\n    if (this.props.data == null){\n      return null\n    }\n    if (this.state.loading){\n      return <Loader active inline='centered' />\n    }\n    console.log(this.props.data)\n    const addrComponents = this.props.data.gmaps.address_components\n    const [countyName, stateName] = this.parseAddress(addrComponents)\n    \n    const statsList = []\n    if(this.state.stats != null){\n      for (var entry of Object.entries(this.state.stats)){\n        statsList.push(<p key={entry[0]}><strong>{entry[0]}:</strong> {entry[1]}</p>)\n      }\n    }\n\n    return (\n      <div className=\"LocationStats\">\n        <h3>{this.state.errorMsg}</h3>\n        <h3>{countyName}, {stateName}</h3>\n        {statsList}\n        <div className=\"source-block\">\n          <p>Source: {this.state.source}</p>\n          <p>Last Updated: {this.state.lastUpdated}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LocationStats;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Geosuggest from 'react-geosuggest';\nimport { Segment } from 'semantic-ui-react'\n\nimport LocationInput from './LocationInput'\nimport LocationStats from './LocationStats'\nimport \"./LocationModal.css\"\n\n// add current location: https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API\n\nclass LocationModal extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      selection: null,\n      fips: null,\n      defaultVal: null\n    }\n    this.handleSelection = this.handleSelection.bind(this)\n    this.getFIPS = this.getFIPS.bind(this)\n    this.update = this.update\n  }\n  \n  componentDidUpdate(prevProps) {\n    if(prevProps.data !== this.props.data && this.props.data != null){\n      this.update()\n    }\n  }\n  \n  componentDidMount() {\n    this.update()\n  }\n  \n  update(){\n    if(this.props.data != null){\n      this.setState({\n        defaultVal: this.props.data.data.description,\n        selection: this.props.data.data,\n        fips: this.props.data.data.fips\n      })\n      console.log(this.props.data)\n    }\n  }\n\n  handleSelection(selection){\n    this.setState({selection: selection})\n    this.props.retrieveLocInfo(this.props.id, selection, \"location\")\n  }\n  \n  getFIPS(fips){\n    this.setState({fips: fips})\n    this.props.retrieveLocInfo(this.props.id, fips, \"fips\")\n  }\n\n  render(){\n    const locStats = this.state.selection === null\n                      ? null\n                      : <LocationStats />\n    return (\n      <div className=\"LocationModal\">\n        <LocationInput default={this.state.defaultVal} onSelect={this.handleSelection}/>\n        <LocationStats default={this.state.fips} data={this.state.selection} getFIPS={this.getFIPS} />\n      </div>\n    );\n  }\n}\n\nexport default LocationModal;","import React, { Component } from 'react';\nimport { Segment, Radio, Header, Input } from 'semantic-ui-react'\n\n// https://www.npmjs.com/package/rc-slider\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\n\nimport './SettingsBar.css'\n\nconst marks = {\n  0: 'ASAP',\n  1: 'Daily',\n  2: '3 Days',\n  3: 'Weekly',\n  4: 'Custom'\n}\n\nconst marksMap = {\n  0: 0,\n  1: 1,\n  2: 3,\n  3: 7\n}\n\nconst invMarksMap = {\n  0: 0,\n  1: 1,\n  3: 2,\n  7: 3\n}\n\nclass SettingsBar extends Component {\n  constructor(props){\n    super(props)\n    \n    if(props.data == null){\n      this.state = {\n        showCustomFreq: false,\n        freqValue: 0,\n        reportChangesValue: true\n      }\n      props.retrieveSettings(this.state)\n    }\n    else{\n      this.state = props.data\n    }\n    \n    this.handleSliderChange = this.handleSliderChange.bind(this)\n    this.handleCustomChange = this.handleCustomChange.bind(this)\n    this.handleRadioChange = this.handleRadioChange.bind(this)\n  }\n  \n  componentDidUpdate(prevProps) {\n    if(prevProps.data !== this.props.data && this.props.data != null){\n      this.setState(this.props.data)\n    }\n  }\n\n  componentDidMount() {\n    if(this.props.data == null){\n      this.props.retrieveSettings(this.state)\n    }\n  }\n  \n  handleSliderChange(value){\n    if(value === 4){\n      this.setState({\n        showCustomFreq: true,\n        freqValue: 0,\n        reportChangesValue: true\n      }, () => this.props.retrieveSettings(this.state))\n    }\n    else {\n      this.setState({\n        freqValue: marksMap[value],\n        showCustomFreq: false\n      }, () => this.props.retrieveSettings(this.state))\n    }\n    \n  }\n\n  handleCustomChange(event){\n    this.setState({\n      freqValue: event.target.value\n    }, () => this.props.retrieveSettings(this.state))\n  }\n\n  handleRadioChange(event){\n    this.setState({\n      reportChangesValue: !this.state.reportChangesValue\n    }, () => this.props.retrieveSettings(this.state))\n  }\n\n  render() {\n    return (\n      <div className=\"settings-bar\">\n        <Segment className=\"settings-container\">\n          <div className=\"alert-freq-wrap\">\n            <div className=\"setting-wrap\">\n              <Header as=\"h5\" className=\"settings-label\">Alert Frequency</Header>\n              <Slider className=\"slider\" \n                      marks={marks} \n                      min={0} \n                      max={4} \n                      defaultValue={0}\n                      value={invMarksMap[this.state.freqValue]} \n                      step={null} \n                      onChange={this.handleSliderChange}\n//                      railStyle={{backgroundColor:'#cacbcd'}}\n//                      trackStyle={{backgroundColor:'#cacbcd'}}\n//                      activeDotStyle={{borderColor: \"#cacbcd\"}}\n                      />\n            </div>\n            {this.state.showCustomFreq \n              ? <Input\n                label={{content: 'days' }}\n                labelPosition='right'\n                placeholder='Every...'\n                className=\"custom-freq\"\n                transparent\n                onChange={this.handleCustomChange}\n            />\n            : null }\n          </div>\n          <div className=\"setting-wrap\">\n            <Header as=\"h5\" className=\"settings-label\">Only Report Changes</Header>\n            <Radio toggle checked={this.state.reportChangesValue} onChange={this.handleRadioChange}/>\n          </div>\n        </Segment>\n      </div>\n    );\n  }\n}\n\nexport default SettingsBar","import Request from './request'\n\nclass User {\n  static submit(data) {\n    console.log(data)\n    return new Request(\"/user/submit\", {\n      data: data,\n      method: \"POST\"\n    })\n  }\n\n  static getData(number){\n    return new Request(\"/user/get_data\", {\n      data: {number: number},\n      method: \"POST\"\n    })\n  }\n}\n\nexport default User;","import React, { Component } from 'react';\nimport LocationModal from './LocationModal/LocationModal'\nimport SettingsBar from './SettingsBar'\nimport { Button, Segment, Header, Label } from 'semantic-ui-react'\nimport User from '../../api/user'\nimport './AlertForm.css'\n\nclass AlertForm extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      locModals: [],\n      locData: {},\n      settings: null,\n      error: false,\n      data: null\n    }\n\n    this.handleAdd = this.handleAdd.bind(this)\n    this.handleRemove = this.handleRemove.bind(this)\n    this.handleSubmit  = this.handleSubmit.bind(this)\n    this.retrieveSettings = this.retrieveSettings.bind(this)\n    this.retrieveLocInfo = this.retrieveLocInfo.bind(this)\n  }\n  \n  componentDidMount() {\n    if(this.state.data == null){\n      User.getData(this.props.number)\n      .then(resp => {\n        console.log(resp)\n        if(resp.data.success){\n          var locData = {}, locModals = []\n          resp.data.data.places.map((val, i) => {\n            console.log(\"VAL:\", val)\n            locData[i] = val\n            locModals.push(\n              <Segment key={i}>\n                <LocationModal \n                  id={i} \n                  retrieveLocInfo={this.retrieveLocInfo}\n                  data={val}\n                  />\n              </Segment>\n            )\n          })\n          this.setState({\n            data: resp.data.data,\n            settings: resp.data.data.settings,\n            locData: locData,\n            locModals: locModals\n          })\n        }\n      })\n    }\n  }\n\n  handleAdd(){\n    const { locModals, locData } = this.state\n    var key = locModals.length\n    locData[key] = {}\n    this.setState({\n      locModals: locModals.concat(\n        <Segment key={key}>\n          <LocationModal \n            id={key} \n            retrieveLocInfo={this.retrieveLocInfo}\n            />\n        </Segment>\n        ),\n      locData: locData\n    })\n  }\n  \n  handleRemove(){\n    var {locModals, locData} = this.state \n    var popped = locModals.pop()\n    delete locData[popped.key]\n    this.setState({\n      locModals: locModals\n    })\n  }\n  \n  handleSubmit(){\n    const allData = {\n      places: Object.values(this.state.locData),\n      settings: this.state.settings,\n      phone_number: this.props.number\n    }\n    \n    if(allData.places[0].fips == null){\n      this.setState({\n        errorMsg: \"Must enter a location!\",\n        error: true\n      })\n      return null\n    }\n\n    User.submit(allData)\n    .then(resp => {\n      this.props.completeSubmit()\n      this.setState({error: false})\n    })\n    .catch(error => {\n      console.log(error)\n      this.setState({error: true, errorMsg: \"Could not submit! Please try again later\"})\n    })\n\n\n  }\n  \n  retrieveLocInfo(key, data, type){\n    const {locData} = this.state\n    if(type == \"fips\"){\n      locData[key].fips = data\n    }\n    else {\n      locData[key].data = data\n    }\n    this.setState({\n      locData: locData\n    })\n  }\n\n  retrieveSettings(data){\n    this.setState({\n      settings: data\n    })\n    console.log(data)\n  }\n\n  render() {\n    if(this.state.locModals.length === 0){\n      this.handleAdd()\n    }\n    console.log(this.state)\n    return (\n      <div className=\"AlertForm\">\n        <SettingsBar retrieveSettings={this.retrieveSettings} data={this.state.settings}/>\n        <Header as='h5'>\n          Locations to Track\n        </Header>\n        <Segment.Group className=\"location-modal-group\">\n          {this.state.locModals}\n        </Segment.Group>\n        <div className=\"button-group\">\n          <div className=\"edit-buttons-group\">\n            <Button basic onClick={this.handleAdd} content=\"Add Location\" icon=\"add\" />\n            {this.state.locModals.length > 1 \n              ? <Button basic onClick={this.handleRemove} content=\"Remove Location\" icon=\"minus\" />\n              : null }\n          </div>\n          <div style={{display:\"flex\", flexDirection:\"column\", alignItems:\"center\"}}>\n            <Button color=\"blue\" onClick={this.handleSubmit}>\n              Submit\n            </Button>\n            {this.state.error ? <p>{this.state.errorMsg}</p> : null}\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default AlertForm;","import React, { Component } from 'react';\nimport NumberInput from \"./NumberInput\"\nimport AlertForm from \"./AlertForm\"\nimport \"./AlertInterface.css\"\nimport User from \"../../api/user\"\n\nclass AlertInterface extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      displayForm: false,\n      number: null,\n      data: null,\n      submitted: false\n    }\n    \n    this.displayForm = this.displayForm.bind(this)\n    this.retrieveNumber = this.retrieveNumber.bind(this)\n    this.completeSubmit = this.completeSubmit.bind(this)\n  }\n\n  displayForm(value) {\n    this.setState({ displayForm: value, submitted: false})\n  }\n  \n  retrieveNumber(value){\n    this.setState({\n      number: value\n    })\n  }\n\n  completeSubmit(){\n    this.setState({displayForm: false, submitted: true})\n  }\n\n  render() {\n    return (\n      <div className=\"AlertInterface\">\n        <NumberInput \n          displayForm={this.displayForm}\n          retrieveNumber={this.retrieveNumber}\n        />\n        {this.state.displayForm \n          ? <AlertForm number={this.state.number} completeSubmit={this.completeSubmit} />\n          : <h5 className=\"label\">Put in your phone number to get started</h5>\n        }\n        {this.state.submitted\n          ? <h4 style={{color:'grey'}}>Thanks for submitting! To edit any settings, simply re-fill out this form</h4>\n          : null }\n      </div>\n    );\n  }\n}\n\nexport default AlertInterface","import React, { Component } from 'react';\nimport AlertInterface from './AlertInterface/AlertInterface';\nimport { Header, Menu, Input } from 'semantic-ui-react'\nimport \"./HomeView.css\"\nclass HomeView extends Component {\n  \n  constructor(props){\n    super(props)\n\n    this.state = {}\n\n    // this.handleNavClick = this.handleNavClick.bind(this)\n  }\n\n  \n  render() {\n    return (\n      <div className=\"HomeView\">\n        <Header as='h1' id=\"main-title\"> Coronalert \n          <Header.Subheader style={{fontSize: '0.5em'}}>\n            An Amber Alert system for Covid-19 cases in your area.\n          </Header.Subheader>\n        </Header>\n        <AlertInterface />\n      </div>\n    );\n  }\n}\n\nexport default HomeView\n","import React, { Component } from 'react';\nimport AlertInterface from './AlertInterface/AlertInterface';\nimport { Card, Icon, Image, Header } from 'semantic-ui-react'\nimport \"./SourcesView.css\"\n\nclass SourcesView extends Component {\n  \n  constructor(props){\n    super(props)\n\n    this.state = {}\n\n    // this.handleNavClick = this.handleNavClick.bind(this)\n  }\n\n  \n  render() {\n    return (\n      <div className=\"SourcesView\">\n        <Header as='h1' className=\"main-title\"> Sources\n        </Header>\n        <p>\n            Coronalert pulls from open source datasets that are regularly updated.<br/>Currently, the highest resolution data available is at the <b>county-level</b>.\n        </p>\n        <Card.Group className=\"source-card\">\n        <Card fluid href=\"https://github.com/CSSEGISandData/COVID-19\" target=\"_blank\" link>\n          <Image src='https://systems.jhu.edu/wp-content/uploads/2020/02/Dashboard_screenshot-1024x456.png' wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>Johns Hopkins University CSSE</Card.Header>\n            <Card.Meta>\n              <span className='date'>Center for Systems Science and Engineering</span>\n            </Card.Meta>\n            <Card.Description>\n              The Johns Hokins Center for Systems Science and Engineering collects data from a variety of sources\n              and compiles them daily into one github repository.\n\n              More information can be found<a href=\"https://systems.jhu.edu/research/public-health/ncov/\"> here.</a>\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='clock' />\n              Updated Daily\n            </a>\n          </Card.Content>\n        </Card>\n        <Card fluid href=\"https://github.com/nytimes/covid-19-data\" target=\"_blank\" link>\n          <Image src='https://static01.nyt.com/images/2020/03/03/us/coronavirus-us-cases-map-promo-1583277425489/coronavirus-us-cases-map-promo-1583277425489-superJumbo-v164.png' wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>New York Times</Card.Header>\n            <Card.Meta>\n              <span className='date'></span>\n            </Card.Meta>\n            <Card.Description>\n              Database compiled by the New York Times to track Covid-19 on the county level.\n\n              More information can be found<a href=\"https://www.nytimes.com/article/coronavirus-county-data-us.html\"> here.</a>\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='clock' />\n              Updated Regularly\n            </a>\n          </Card.Content>\n        </Card>\n        </Card.Group>\n      </div>\n    );\n  }\n}\n\nexport default SourcesView\n","import React, { Component } from 'react';\nimport AlertInterface from './AlertInterface/AlertInterface';\nimport { Card, Icon, Image, Header } from 'semantic-ui-react'\nimport \"./AboutView.css\"\n\nclass AboutView extends Component {\n  \n  constructor(props){\n    super(props)\n\n    this.state = {}\n\n    // this.handleNavClick = this.handleNavClick.bind(this)\n  }\n\n  \n  render() {\n    return (\n      <div className=\"SourcesView\">\n        <Header as='h1' className=\"main-title\"> About\n        </Header>\n        <p >\n          \n          Although some cities have started working on their own text alert systems for Covid-19, the United States has <a href=\"https://www.washingtonpost.com/weather/2020/03/23/wireless-emergency-alerts-coronavirus/\">yet to establish a national alert system</a> for Covid-19, seen in countries such as South Korea. \n        \n          Coronalert is an SMS-based, \"amber-alert\" style app for alerting users of active Covid-19 cases in their area. The alerts are meant to reflect the most up to date data at a frequency chosen by the user.\n          <br />\n        </p>\n        <p>\n          The most susceptible population to the Covid-19 outbreak, members of the older generation, are also the least likely demographic to download the latest Covid-19 contact tracing app, or check <a href=\"https://covid19.health\">online data visualizations</a> of Covid-19 cases.\n          SMS is not only easy to use and ubiquitous, it's also the most accessible interface for the elderly population to keep up to date with cases of the disease in their area.\n          <br/>\n        </p>\n        <p>\n          This was a submission for the <a href=\"https://covid-global-hackathon.devpost.com\">Covid-19 Global Hackathon 1</a>\n        </p>\n        \n      </div>\n    );\n  }\n}\n\nexport default AboutView\n","import React, { Component} from 'react';\nimport { Icon, Menu } from 'semantic-ui-react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport HomeView from './components/HomeView'\nimport SourcesView from './components/SourcesView'\nimport AboutView from './components/AboutView'\n\nclass App extends Component {\n  // componentDidMount() {\n  //   const script = document.createElement(\"script\");\n  //   script.async = true;\n  //   script.src = `https://maps.googleapis.com/maps/api/js?libraries=places&key=${process.env.REACT_APP_GMAPS_API_KEY}`;\n  //   script.type = \"text/javascript\"\n  //   document.head.appendChild(script);\n  // }\n  constructor(props){\n    super(props)\n    this.state = {\n      activeItem: \"home\"\n    }\n    // this.handleNavClick = this.handleNavClick.bind(this)\n  }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render(){\n    const { activeItem } = this.state\n    var activeView = null\n    console.log(activeItem)\n    if(activeItem === \"about\"){\n      activeView = <AboutView />\n    }\n    else if(activeItem === \"sources\"){\n      activeView = <SourcesView />\n    }\n    else {\n      activeView = <HomeView />\n    }\n    console.log(activeView)\n    return (\n      <div className=\"App\">\n        <Menu className=\"navbar\" size={\"massive\"} secondary>\n\n          <Menu.Menu position=\"right\">\n            <Menu.Item\n              name='home'\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              name='sources'\n              active={activeItem === 'sources'}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              name='about'\n              active={activeItem === 'about'}\n              onClick={this.handleItemClick}\n            />\n          </Menu.Menu>\n        </Menu>\n        {activeView}\n        <div className=\"footer\">\n          <div className=\"footer-content\">\n            <a href=\"https://jsyu.me\" \n              target=\"_blank\">\n              Justin Yu</a> 2020\n            <a href=\"https://github.com/justinyu1618/Coronalert\" \n              target=\"_blank\" \n              style={{marginLeft:\"10px\"}}>\n              <Icon \n                size={'large'} \n                name=\"github\" \n                color=\"grey\" \n                data-tip=\"Source Code\"\n                link={true}\n              />\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}